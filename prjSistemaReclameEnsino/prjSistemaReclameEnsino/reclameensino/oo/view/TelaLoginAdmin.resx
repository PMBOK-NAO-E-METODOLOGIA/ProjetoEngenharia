<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>