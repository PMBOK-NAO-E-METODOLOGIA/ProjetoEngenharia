sup Pessoa{
	Atributos:
		-nomePessoa : string
		
	Métodos:
	
		+setNomePessoa(string):void
		
		+getNomePessoa(): string
}

sub Admin{

	Atributos
	
		-nomeDeUsuario : string
		-senha : string
		-idAdmin : string/int ?! <<< verificar
	
		/* O porque do idAdmin?
		 *	Estive pensando em situações de futuras 
		 *  consultas para que haja o retorno do ID. 
		 *  Porém, se for pensar bem, não há necessidade
		 *  de ter esse atributo, no momento. Pois 
		 *  as consultas para validação de acesso,
		 *  exibição do usuário (na Tela Principal 
		 *  Administrador) podem utilizar somente o campo 
		 *  'nomeUsuario' para realizar a consulta, visto 
		 *  que na tabela na base de dados, esse dado é 
		 *  ÚNICO. Não existirá dois usuários com o mesmo 
		 *  nick.
		 *
		 *  Todavia, digo, numa inserção de dados que 
		 *  depende do ID, pois será posto em um campo de 
		 *  chave estrangeira, neste caso sim fará 
		 *  sentido esse atributo.
		 
	
	Métodos
	
		+Admin()
	
		+Admin(nome, nomeDeUsuario, senha)
			/* E caso, eu não queira passar parametros 
			 * para o construtor?
			 * 
		+setSenha(string): void
	
		+getNomeUsuario(): string
	
		+cadastrarAdministrador():bool
	
		+modificarSenha(string,string): void
		
		/* Descrever de quem são esses tipos de dados!
		
		+modificarNomeDeUsuario(string):void
		
		/* Descrever de quem são esses tipos de dados!
}

sub User{
	Atributos:
		-comentário : string
		-visualizarComentario : bool
		
	Métodos:
		+User(string): void
		
		+getComentario(int): string
		
		+setVisto(string) : void
}


classe Global{
	Atributos:
		-nome : string
		
		-nomeDeUsuario : string
		
	Métodos:
		+getNome() : string
		
		+setNome(string) : void
		
		+getNomeUsuario() : string
		
		+setNomeUsuario(string) : void
}